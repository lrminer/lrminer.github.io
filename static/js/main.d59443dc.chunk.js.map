{"version":3,"sources":["components/Toggle.styled.js","components/Toggle.js","components/Navbar.js","components/Intro.js","data/workExperience.js","components/WorkExperience.js","data/skills.js","components/Skills.js","components/Education.js","data/projects.js","components/Projects.js","components/AdditionalInformation.js","components/Main.js","theme.js","global.js","App.js","useDarkMode.js","reportWebVitals.js","index.js"],"names":["ToggleContainer","styled","button","theme","gradient","toggleBorder","Toggle","toggleTheme","className","onClick","style","color","Navbar","background","position","top","width","zIndex","padding","id","activeClass","to","smooth","hashSpy","duration","delay","href","download","Intro","border","borderRadius","maxHeight","maxWidth","height","src","alt","workExperience","title","startDate","endDate","company","description","achievements","Job","useState","open","setOpen","toggleOpen","scope","overlayClassName","closeTimeoutMD","onRequestClose","isOpen","length","map","achievement","index","WorkExperience","job","skills","name","type","docs","experience","Skills","sortByName","a","b","nameA","toUpperCase","nameB","detProgWidth","expLvl","sort","skill","i","role","aria-valuenow","aria-valuemin","aria-valuemax","Education","projects","Project","props","Projects","project","AdditionalInformation","Main","lightTheme","body","text","darkTheme","GlobalStyles","createGlobalStyle","App","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","themeMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59443dc.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst ToggleContainer = styled.button`\n  background: ${({ theme }) => theme.gradient};\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 0.5rem;\n  width: 3rem;\n  max-height: 2rem;\n\n  &:focus {\n    outline: none;\n  }\n  \n`;\nexport default ToggleContainer;","import React from 'react'\nimport {func, string} from 'prop-types';\nimport ToggleContainer from \"./Toggle.styled\";\n\nconst Toggle = ({theme, toggleTheme}) => {\n    return (\n        <ToggleContainer className={\"ml-3\"} onClick={toggleTheme}>\n            {theme === 'dark' && <i style={{color: \"white\"}} className=\"fas fa-sun fa-2x mr-3\"></i>}\n            {theme === \"light\" && <i className=\"fas fa-moon fa-2x ml-3\"></i>}\n        </ToggleContainer>\n    );\n};\n\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\n\nexport default Toggle;\n","import React, {useState} from 'react'\nimport {Link} from 'react-scroll'\nimport Toggle from './Toggle'\n\nconst Navbar = ({theme, toggleTheme}) => {\n\n\n\n    return (\n\n            <div style={{background: '#007ba7', color: 'white', position: \"fixed\", top: 0, width: \"100%\", zIndex: 999}}>\n                <div className={'container d-flex justify-content-between'} style={{padding: \"15px 0px\"}}>\n                    <div id=\"title\" className={'pl-2 pl-sm-0 d-flex justify-content-between align-items-center'}>\n                        <Link activeClass=\"active\"\n                              to=\"topOfPage\"\n                              smooth={true}\n                              hashSpy={true}\n                              duration={500}\n                              delay={0}\n                        >\n                            Logan Miner\n                        </Link>\n                        <Toggle theme={theme} toggleTheme={toggleTheme} />\n\n\n                    </div>\n                    <div className={'d-flex flex-row align-items-center justify-content-center'} id=\"social-links\">\n                        <div className=\"d-flex flex-row pr-2 pr-sm-0\">\n                            <div className={'pl-3'}>\n                                <a style={{color: \"white\"}} href=\"LoganMinerSoftwareEngineerResume.PDF\" download={true}>Resume</a>\n                            </div>\n                            <div className={'pl-3'}>\n                                <a style={{color: \"white\"}} href=\"https://github.com/lrminer\">GitHub</a>\n                            </div>\n                            <div className={'pl-3'}>\n                                <a style={{color: \"white\"}}\n                                   href=\"https://www.linkedin.com/in/logan-miner/\"\n\n                                >LinkedIn</a>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n    )\n}\n\nexport default Navbar","import React from \"react\";\n\nconst Intro = () => {\n\n    return (\n        <section className={\"p-5\"}\n                 style={{border: 'black 1px solid', borderRadius: \"10px\"}}>\n\n            <div className=\"row\">\n                <div className=\"col-12 col-lg-6\">\n                    <h1 style={{color: \"#007ba7\"}}>Logan Miner</h1>\n                    <p>Attained Full Stack Development Certificate from Georgia Institute of Technology.</p>\n                    {/*<p>Proficient with Node, Express, React, MongoDB, MySQL, Postgres, and GraphQL, among various other*/}\n                    {/*    technologies.</p>*/}\n                    <p>Able to master new skills quickly.</p>\n                    <p>Possess a strong attention to detail, a voracious learning attitude, and an ability to teach\n                        others through effective listening and understanding of code intent.</p>\n                    <p>Experience working with teams developing content management, news, and e-commerce\n                        applications.</p>\n                    <p>Looking to implement agile methodologies with a development team to create necessary tools\n                        catering to a variety of audiences.</p>\n                </div>\n                <div className=\"col-12 col-lg-6\">\n                    <img style={{maxHeight: 400, maxWidth: 400, height: \"100%\", width: \"100%\", border: \"#007ba7 solid 10px\", borderRadius: \"50%\"}}\n                         src=\"./professional-image.jpg\" alt=\"Professional image of Logan Miner\"/>\n                </div>\n            </div>\n\n        </section>\n    );\n};\n\nexport default Intro;\n","const workExperience = [{\n    title: \"Teaching Assistant\",\n    startDate: \"10/2019\",\n    endDate: \"Current\",\n    company: \"2U/Trilogy\",\n    description: \"\",\n    achievements: [\n        \"Providing effective guidance, training, lesson plans, and tools to support student learning\",\n        \"Tracking student progress throughout the course length\",\n        \"Helping students learn to answer their own questions as developers\",\n        \"Continuous mentoring for all students throughout their careers\"\n    ]\n}, {\n    title: \"Digital Development Engineer\",\n    startDate: \"02/2020\",\n    endDate: \"09/2020\",\n    company: \"Gray Television\",\n    description: \"\",\n    achievements: [\n        \"Developed content management system\",\n        \"Created features for a content management system used by dozens of news websites, utilizing React functional components and hooks\",\n        \"Designed features for three target audiences:  curators, editors, and readers\",\n        \"Deployed over 60 websites using CI/CD pipeline\",\n        \"Wrote tests for React components using Jest/Enzyme\"\n    ]\n}, {\n    title: \"Full Stack Engineer\",\n    startDate: \"11/2019\",\n    endDate: \"01/2020\",\n    company: \"Private Contract\",\n    description: \"\",\n    achievements: [\n        \"Contributed to full stack e-commerce applications\",\n        \"Developed UI/UX, microservices, REST APIs\",\n        \"Utilized React, Redux, AWS, Node, and Express\"\n    ]\n}];\n\nexport default workExperience;","import React, {useState} from \"react\";\nimport workExperience from '../data/workExperience';\n// import Modal from './Modal';\nimport Modal from 'react-modal';\n// import ModalWrapper from \"./Modal.styled\";\n\nconst Job = ({title, startDate, endDate, company, description, achievements}) => {\n    const [open, setOpen] = useState(false);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    }\n\n    return (\n        <>\n            <tr className={\"pointer\"} onClick={toggleOpen}>\n                <th scope={\"row\"}>{title}</th>\n                <td>{startDate}</td>\n                <td>{endDate}</td>\n                <td>{company}</td>\n            </tr>\n\n\n            <Modal\n                className={\"myModal\"}\n                overlayClassName={\"overlay\"} closeTimeoutMD={250}\n                onRequestClose={toggleOpen}\n                isOpen={open}>\n                <div\n                    // style={{color: \"white\"}}\n                >\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{title}</h5>\n                        <p className=\"card-text\">{company}</p>\n                    </div>\n                    {achievements.length > 0 && <ul className={\"list-group list-group-flush\"}>\n                        {achievements.map((achievement, index) => (\n                            <li className={\"list-group-item\"} key={{index}}>\n                                {achievement}\n                            </li>\n                        ))}\n                    </ul>}\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nconst WorkExperience = () => {\n\n    return (\n        <section className={\"mt-5 p-5\"}\n                 style={{border: 'black 1px solid', borderRadius: \"10px\"}}>\n            <h1 style={{color: \"#007ba7\"}}>Work Experience</h1>\n            <table className={\"table table-striped table-responsive-md\"}>\n                <thead>\n                <tr>\n                    <th scope={'col'}>Title</th>\n                    <th scope={'col'}>Start Date</th>\n                    <th scope={'col'}>End Date</th>\n                    <th scope={'col'}>Company</th>\n                </tr>\n                </thead>\n                <tbody>\n                {workExperience.map((job, index) => <Job key={index} {...job} />)}\n                </tbody>\n            </table>\n            {/*<p>*Click on a row to see more details</p>*/}\n        </section>\n\n    );\n};\n\nexport default WorkExperience;\n","const skills = [\n    {\n        name: \"React JS\",\n        type: \"Frontend\",\n        docs: \"https://reactjs.org/docs/getting-started.html\",\n        experience: \"expert\"\n    },\n    {\n        name: \"React Native\",\n        type: \"Frontend\",\n        docs: \"https://reactnative.dev/docs/getting-started\",\n        experience: \"intermediate\"\n    },\n    {name: \"Node\", type: \"Frontend\", docs: \"https://nodejs.org/en/docs/\", experience: \"expert\"},\n    {name: \"Express\", type: \"Frontend\", docs: \"https://expressjs.com/\", experience: \"expert\"},\n    {name: \"GraphQL\", type: \"Frontend\", docs: \"https://graphql.org/code/\", experience: \"advanced\"},\n    {name: \"MongoDB\", type: \"Frontend\", docs: \"https://docs.mongodb.com/\", experience: \"advanced\"},\n    {name: \"MySQL\", type: \"Frontend\", docs: \"https://dev.mysql.com/doc/\", experience: \"advanced\"},\n    {name: \"Postgres\", type: \"Frontend\", docs: \"https://www.postgresql.org/docs/current/\", experience: \"advanced\"},\n    {\n        name: \"Redux\",\n        type: \"Frontend\",\n        docs: \"https://redux.js.org/introduction/getting-started\",\n        experience: \"advanced\"\n    },\n    {\n        name: \"Recoil\",\n        type: \"Frontend\",\n        docs: \"https://recoiljs.org/docs/introduction/getting-started/\",\n        experience: \"intermediate\"\n    },\n    {\n        name: \"Bootstrap\",\n        type: \"Frontend\",\n        docs: \"https://getbootstrap.com/docs/5.0/getting-started/introduction/\",\n        experience: \"expert\"\n    },\n    {\n        name: \"CSS\",\n        type: \"Frontend\",\n        docs: \"https://developer.mozilla.org/en-US/docs/Web/CSS\",\n        experience: \"expert\"\n    },\n    {name: \"SCSS\", type: \"Frontend\", docs: \"https://sass-lang.com/documentation\", experience: \"advanced\"},\n    {name: \"Webpack\", type: \"Frontend\", docs: \"https://webpack.js.org/concepts/\", experience: \"intermediate\"},\n    {name: \"NextJS\", type: \"Frontend\", docs: \"https://nextjs.org/docs\", experience: \"intermediate\"},\n    {name: \"Gatsby\", type: \"Frontend\", docs: \"https://www.gatsbyjs.com/docs/\", experience: \"advanced\"},\n    {name: \"Angular\", type: \"Frontend\", docs: \"https://angular.io/docs\", experience: \"beginner\"},\n    {name: \"AWS\", type: \"Frontend\", docs: \"https://aws.amazon.com/\", experience: \"intermediate\"},\n    {name: \"Tensorflow\", type: \"Frontend\", docs: \"https://www.tensorflow.org/api_docs\", experience: \"beginner\"},\n    {name: \"Linux\", type: \"Frontend\", docs: \"https://www.kernel.org/doc/html/latest/\", experience: \"advanced\"},\n    {name: \"Docker\", type: \"Frontend\", docs: \"https://docs.docker.com/\", experience: \"intermediate\"},\n    {name: \"Git\", type: \"Frontend\", docs: \"https://git-scm.com/doc\", experience: \"expert\"},\n    {name: \"GitHub\", type: \"Frontend\", docs: \"https://github.com/lrminer\", experience: \"expert\"},\n    {\n        name: \"Postman\",\n        type: \"Frontend\",\n        docs: \"https://learning.postman.com/docs/getting-started/introduction/\",\n        experience: \"advanced\"\n    },\n    {\n        name: \"Javascript\",\n        type: \"Frontend\",\n        docs: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\n        experience: \"expert\"\n    },\n    {name: \"Python\", type: \"Frontend\", docs: \"https://docs.python.org/3/\", experience: \"beginner\"},\n    {name: \"npm\", type: \"Frontend\", docs: \"https://docs.npmjs.com/\", experience: \"advanced\"},\n    {name: \"Brain.js\", type: \"Frontend\", docs: \"https://brain.js.org/#/\", experience: \"beginner\"},\n    {name: \"Socket.io\", type: \"Frontend\", docs: \"https://socket.io/docs/v3/index.html\", experience: \"advanced\"},\n    {name: \"Jest\", type: \"Frontend\", docs: \"https://jestjs.io/en/\", experience: \"intermediate\"},\n    {name: \"Enzyme\", type: \"Frontend\", docs: \"https://enzymejs.github.io/enzyme/\", experience: \"intermediate\"},\n\n    // { name: \"Redux\" },\n];\n\nexport default skills;\n","import {Fragment} from \"react\";\n\nimport skills from '../data/skills'\n\nconst Skills = () => {\n\n    const sortByName = (a, b) => {\n        const nameA = a.name.toUpperCase(); // ignore upper and lowercase\n        const nameB = b.name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) { return -1; }\n        if (nameA > nameB) { return 1; }\n        // names must be equal\n        return 0;\n    };\n\n    const detProgWidth = (expLvl) => {\n        switch (expLvl) {\n            case 'beginner':\n                return '25%'\n            case 'intermediate':\n                return '50%'\n            case 'advanced':\n                return '75%'\n            case 'expert':\n                return '100%'\n            default:\n                return '0,0,0'\n        }\n    }\n\n    return (\n\n        <section className={\"mt-5 p-5\"}\n                 style={{border: 'black 1px solid', borderRadius: \"10px\"}}>\n            <h1 style={{color: \"#007ba7\"}}>Technologies</h1>\n            <div className={'container'} id=\"skills\">\n                <div className=\"row\">\n                    <div className={'col-6'}>\n                        <div className={\"list-group list-group-flush\"}>\n                            {skills.sort(sortByName).map((skill, i) => {\n                                if (i % 2 === 0) {\n                                    return <Fragment key={i}>\n                                        <a className={\"list-group-item list-group-item-action text-center\"} style={{}}\n                                           href={skill.docs}>{skill.name}</a>\n                                        <div className=\"progress\">\n                                            <div className={`progress-bar bg-info`} role=\"progressbar\"\n                                                 style={{width: detProgWidth(skill.experience)}}\n                                                 aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </Fragment>\n                                } else {\n                                    return;\n                                }\n                            })}\n                        </div>\n                    </div>\n                    <div className={'col-6'}>\n                        <div className={\"list-group list-group-flush\"}>\n                            {skills.sort(sortByName).map((skill, i) => {\n                                if (i % 2 === 0) {\n                                    return\n                                } else {\n                                    return <Fragment key={i}>\n                                        <a className={\"list-group-item list-group-item-action text-center\"} style={{}}\n                                           href={skill.docs}>\n                                            {skill.name}\n                                        </a>\n                                        <div className=\"progress\">\n                                            <div className={`progress-bar bg-info`} role=\"progressbar\"\n                                                 style={{width: detProgWidth(skill.experience)}}\n                                                 aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </Fragment>;\n                                }\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </section>\n\n    );\n};\n\nexport default Skills;\n","import React from \"react\";\n\nconst Education = () => {\n\n    return (\n        <section className={\"mt-5 p-5\"}\n                 style={{border: 'black 1px solid', borderRadius: \"10px\"}}>\n            <h1 style={{color: \"#007ba7\"}}>Education</h1>\n            <table className={\"table table-striped table-responsive-md\"}>\n                <thead>\n                <tr>\n                    <th scope={'col'} className={''}>Degree/Certification</th>\n                    <th scope={'col'}>Subject</th>\n                    <th scope={'col'}>Date Completed</th>\n                    <th scope={'col'}>Institution</th>\n                    {/*<th scope={'col'}>Role</th>*/}\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope={'row'}>Bachelor of Science (B.S.)</th>\n                    <td>Biological Sciences</td>\n                    <td>05/2016</td>\n                    <td>Butler University</td>\n                    {/*<td>React Developer</td>*/}\n                </tr>\n                <tr>\n                    <th scope={'row'}>Certificate</th>\n                    <td>Full Stack Web Development</td>\n                    <td>09/2019</td>\n                    <td>Georgia Institute of Technology</td>\n                    {/*<td>React Developer</td>*/}\n                </tr>\n                </tbody>\n            </table>\n        </section>\n    );\n};\n\nexport default Education;\n","const projects = [\n    {\n        title: \"Pokemonline\",\n        description: \"Gen 1 Pokemon MMORPG powered by WebGL and socket.io\",\n        href: \"https://github.com/lrminer/pokemonline\",\n    },\n    {\n        title: \"Daily Translator\",\n        description: \"Full Catholic Bible with Spanish translations using swiping gestures. Pulls up a new chapter of bible each day.\",\n        href: \"https://github.com/lrminer/daily-translator\",\n    }\n    ];\nexport default projects;","import React from \"react\";\nimport projects from '../data/projects'\n\n\nconst Project = props => {\n    return <div className=\"col-12 col-md-6 mt-5 mb-5\">\n        <h2>{props.title}</h2>\n        <div className={'pt-3'}>{props.description}</div>\n        <div className={'pt-3'}><a href={props.href}>GitHub Repo</a>\n        </div>\n    </div>\n}\n\nconst Projects = () => {\n\n    return (\n        <section className={\"mt-5 p-5\"}\n                 style={{border: 'black 1px solid', borderRadius: \"10px\"}}>\n            <h1 style={{color: \"#007ba7\"}}>Projects</h1>\n            <div className=\"row\">\n                {projects.map((project, index) => <Project key={index} {...project} />)}\n            </div>\n        </section>\n\n    );\n};\n\nexport default Projects;\n","import React from \"react\";\n\nconst AdditionalInformation = () => {\n\n    return (\n        <section className={\"mt-5 p-5\"}\n                 style={{border: 'black 1px solid', borderRadius: \"10px\"}}>\n            <h1 style={{color: \"#007ba7\"}}>Additional Information</h1>\n            <p>Reach out to me via <a href=\"mailto:logan.miner@protonmail.com?subject=lrminer.github.io\">email</a>.</p>\n        </section>\n\n    );\n};\n\nexport default AdditionalInformation;\n","import Intro from \"./Intro\";\nimport WorkExperience from \"./WorkExperience\";\nimport Skills from \"./Skills\";\nimport Education from \"./Education\";\nimport Projects from './Projects'\nimport AdditionalInformation from \"./AdditionalInformation\";\nconst Main = () => {\n    return (\n        <div className={\"pt-5 pb-5\"} style={{background: \"#555\"}}>\n            <div className=\"container p-0\">\n                <Intro/>\n                <WorkExperience/>\n                <Skills/>\n                <Education/>\n                <Projects/>\n                <AdditionalInformation />\n            </div>\n        </div>\n    )\n}\n\nexport default Main","export const lightTheme = {\n    body: '#E2E2E2',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n}\n\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n body, section, table, .list-group-item, thead, tbody, .myModal {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n`","import React, {useState} from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css'\nimport Navbar from './components/Navbar'\nimport Main from \"./components/Main\";\nimport {ThemeProvider} from 'styled-components';\nimport {lightTheme, darkTheme} from './theme';\nimport {GlobalStyles} from './global';\nimport { useDarkMode } from './useDarkMode';\n\n\nfunction App() {\n    const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    if (!componentMounted) {\n        return <div />\n    };\n\n    return (\n        <ThemeProvider theme={themeMode}>\n            <GlobalStyles />\n            <div  className={'pt-5'}>\n                <div id=\"topOfPage\"></div>\n                <Navbar theme={theme} toggleTheme={toggleTheme}/>\n                <Main/>\n\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [componentMounted, setComponentMounted] = useState(false);\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const toggleTheme = () => {\n        if (theme === 'light') {\n            setMode('dark');\n        } else {\n            setMode('light');\n        }\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        if (localTheme) {\n            setTheme(localTheme);\n        } else {\n            setMode('light');\n        }\n        setComponentMounted(true);\n    }, []);\n\n    return [theme, toggleTheme, componentMounted]\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}